<h3>(video) (post to '/video')</h3>

<!--DEBUG-->
{{#if data}}
    <!-- partials here-->
    {{data}}
{{/if}}

<!-- MAIN FORM -->
<form id="main-form" class="">
    <div class="form-group">
        <label for="input-text">Enter Text </label>
        <input type="text" class="form-control" id="input-text" name="input_data" required autocomplete="off" autofocus>
    </div>

    <button type="submit" class="btn btn-default">Submit</button> <br>
</form>

<!--Word List Button-->
<button id="wordListButton" class="btn btn-default">Word List</button>
<button id="loadVideoButton" class="btn btn-primary">Load Video</button>



<div id="resultDiv"></div>


<script>
    var pingStart;
    var pingEnd;

    var resultDiv = document.getElementById('resultDiv');
    var form = document.getElementById('main-form');
    var wordListButton = document.getElementById('wordListButton');
    var loadVideoButton = document.getElementById('loadVideoButton');

    var textInput = document.getElementById('input-text');

    var videoDataObject;


    form.addEventListener('submit', function(e){
        pingStart = Date.now();         //store start time.
        e.preventDefault();

        var grabbedData = document.getElementById('input-text');

        //AJAX call to API
        $.ajax({
            url: '/video',
            type:'POST',
            data:{datum: grabbedData.value},
            success: function(data, textStatus, jqXHR){
                pingEnd = Date.now();   //stores return time.
                console.log('data returned from server: ' + JSON.stringify(data));

                //TODO: is broke.
                resultDiv.innerHTML = JSON.stringify(data);
                console.log('Pingo-Pongo: ' + (pingEnd - pingStart).toString());

                videoDataObject = data;

                console.log(videoDataObject);

            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log('Horrible AJAX error occurred: ' + textStatus);
                resultDiv.innerHTML = 'Horrible error occurred: ' + textStatus;
            }
        });
        grabbedData.value = '';
    });



    //grab word list
    wordListButton.addEventListener('click', function(e){
        resultDiv.innerHTML = '';
        ajaxPath('/words', 'GET');
    });

    loadVideoButton.addEventListener('click', function(e){

        //TODO: make a function.
        var video = document.createElement('video');
        video.id = 'videoElement';
        video.src = '/videos/' + videoDataObject.videoUrl;
        //video.autoPlay = true;

        video.setAttribute('autoplay', true);
        resultDiv.appendChild(video);
        video.addEventListener('canplaythrough', function(e){
            this.play();
        });

        video.addEventListener('click', function(e){
            if(this.paused) {
                this.play();
            }
        });
    });


    // =========================
    // FUNCTION DEFINITIONS ====
    // =========================

    /**
     * Custom conditional AJAX method.
     * @param path  Endpoint path.
     * @param method    HTTP method.
     * @returns {*}     Returns a
     */
    function ajaxPath(path, method) {
        var internalPing = Date.now();

        $.ajax({
            url: path,
            type: method,
            success: function(data, status, jqXHR){

                var internalPong = Date.now();
                updateResultDiv(resultDiv, data);
                //console.log(data);
                console.log('PingPong: ' + (internalPong - internalPing).toString());

            },
            error: function(jqXHR, status, error){
                console.log('Horrible AJAX error occurred: ' + status);
                console.log('PingPong: ' + (internalPong - internalPing).toString());
            }
        });
    }

    /**
     * Updates the results div.
     * @param rDiv  result div object.
     * @param data  data to pass in.
     */
    function updateResultDiv(rDiv, data){

        var parsedData = JSON.parse(data);

        console.log(parsedData);

        parsedData.forEach(function(elem, ind, arr){

            var button = document.createElement('button');
            var buttonText = document.createTextNode(elem);

            button.appendChild(buttonText);
            button.setAttribute('class','btn btn-success');

            button.classList.add('buttonSpace');

            button.addEventListener('click', function(e){
                textInput.value += ' ' + elem.split('.').shift();
            });

            //li.appendChild(button);
            //ul.appendChild(li);

            rDiv.appendChild(button);

        });

        //rDiv.appendChild(ul);
    }



</script>