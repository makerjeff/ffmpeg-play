<h3>(video) (post to '/video') </h3>

{{! ---- DEBUG ---- }}
{{#if server}}
    <div class="serverVersion">{{server}} <span id="userCount" class="label label-primary thinLabel">0 users online</span></div>
{{/if}}


{{!--LIBRARIES & MODULES--}}
<script src="/js/pingerTool.js"></script>
<script src="/js/textSanitizer.js"></script>
<script src="/js/overlayGen.js"></script>
<script src="/js/videoGen.js"></script>
<script src="/js/charCreator.js"></script>
<script src="/socket.io/socket.io.js"></script>


<!-- number of users indicator (to fill in the room)-->
<div class="characterContainer"> </div>


<!-- MAIN DIV -->
<div class="container">
    <!-- MAIN FORM -->
    <form id="main-form" class="">
        <div class="form-group">
            <label for="input-text">Enter Text </label>
            <input type="text" class="form-control" id="input-text" name="input_data" required autocomplete="off" autofocus maxlength="200">

        </div>

        <button type="submit" alt="Submit" class="btn btn-default pull-right">Make Video</button> <br>
    </form>

    <!-- DEBUG CONTROLS -->
    <div id="debugControlsDiv">
        <!--Word List Button-->
        <button id="wordListButton" class="btn btn-default">Word List</button>
    </div>

    <!--Results Div-->
    <div id="resultDiv"></div>
</div>



<script>
    var socket = io();

    var resultDiv = document.getElementById('resultDiv');
    var form = document.getElementById('main-form');
    var wordListButton = document.getElementById('wordListButton');

    //create loadVideoButton on the fly
    //var loadVideoButton = document.getElementById('loadVideoButton');

    var textInput = document.getElementById('input-text');

    //socket.io user counter
    var userCountIndicator = document.getElementById('userCount');



    // =========================
    // EVENT LISTENERS =========
    // =========================

    // startup
    window.addEventListener('load', function(e){
        console.log('Ready to make America great again.');
        //charCreator.createChar();
        charCreator.createImgChar(0);

    });

    window.addEventListener('blur', function(e){
        document.title = 'Hey come back!';
    });

    window.addEventListener('focus', function(e){
        document.title = 'trump with love';
    });

    // ============ socket.io =============
    socket.on('userCount', function(msg){
        if (msg <= 1) {
            charCreator.createImgChar(msg);
            userCountIndicator.innerHTML = msg + ' user online (you)';
        } else {
            charCreator.createImgChar(msg);
            userCountIndicator.innerHTML = msg + ' users online';
        }
    });
    // ============ socket.io END =========


    form.addEventListener('submit', function(e){
        overlayGen.createWaitOverlay();
        pingerTool.pingStart(); // start ping

        e.preventDefault();

        var grabbedData = document.getElementById('input-text');

        //AJAX call to API
        $.ajax({
            url: '/video',
            type:'POST',
            data:{datum: grabbedData.value},
            success: function(data, textStatus, jqXHR){

                var stringData = JSON.stringify(data);

                console.log('data returned from server: ' + stringData);

                // add to results div
                resultDiv.innerHTML = stringData;

                //put on the veil
                overlayGen.removeWaitOverlay();
                pingerTool.pingEnd();   //display end

                //print data
                console.log(data);

                // ===== CHECK FOR STATUS =====
                switch (data.status) {
                    case 'completed': createLoadVideoButton(document.getElementById('debugControlsDiv'), data);
                        break;
                    case 'failed': console.log('Video creation failed on the server.');
                        break;
                    case 'rejected': console.log('Video creation rejected, not all words available.');
                        break;
                    default: console.log(data.payload);
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log('Horrible AJAX error occurred: ' + textStatus);
                resultDiv.innerHTML = 'Horrible error occurred: ' + textStatus;
            }
        });
        grabbedData.value = '';
    });



    //grab word list
    wordListButton.addEventListener('click', function(e){
        resultDiv.innerHTML = '';

        overlayGen.createWaitOverlay();
        getWords();
    });





    // =========================
    // FUNCTION DEFINITIONS ====
    // =========================

    /**
     * Creates a video button, that creates a video element.
     * @param targetDiv Where to append the video element.
     * @param data Data to ingest.
     */
    function createLoadVideoButton(targetDiv, data){

        // create button
        var loadVideoButton = document.createElement('button');
        loadVideoButton.id = 'loadVideoButton';

        var loadVideoButtonText = document.createTextNode('Load Video');
        loadVideoButton.appendChild(loadVideoButtonText);

        loadVideoButton.classList.add('btn');
        loadVideoButton.classList.add('btn-success');

        targetDiv.appendChild(loadVideoButton);


        // add events
        loadVideoButton.addEventListener('click', function(e){

            //TODO: make a function.
            var video = document.createElement('video');
            video.id = 'videoElement';
            video.src = '/videos/' + data.payload.videoUrl;

            video.setAttribute('preload', true);
            video.setAttribute('autoplay', true);
            video.setAttribute('controls', true);

            //video.setAttribute('muted', true);    //for android mobile

            resultDiv.appendChild(video);

            video.addEventListener('canplaythrough', function(e){
                this.play();
            });

            video.addEventListener('click', function(e){
                if(this.paused) {
                    this.play();
                }
            });

            //remove button
            this.parentNode.removeChild(this);

        });
    }

    /**
     * Custom conditional AJAX method.
     * @returns {*}     Returns a
     */
    function getWords() {

        pingerTool.pingStart();

        $.ajax({
            url: '/words',
            type: 'GET',
            success: function(data, status, jqXHR){

                updateResultDiv(resultDiv, data);
                //console.log(data);

                overlayGen.removeWaitOverlay();
                pingerTool.pingEnd();
            },
            error: function(jqXHR, status, error){
                console.log('Horrible AJAX error occurred: ' + status);

                overlayGen.removeWaitOverlay();
                pingerTool.pingEnd();
            }
        });
    }

    /**
     * Updates the results div.
     * @param rDiv  result div object.
     * @param data  data to pass in.
     */
    function updateResultDiv(rDiv, data){

        // parse AJAX'd data
        var parsedData = JSON.parse(data);

        // print AJAX'd data to console
        console.log(parsedData);

        // create a button for each of the array
        parsedData.forEach(function(elem, ind, arr){

            var inputWord = elem.split('.').shift();

            var button = document.createElement('button');
            var buttonText = document.createTextNode(inputWord);

            button.appendChild(buttonText);
            button.setAttribute('class','btn btn-success');

            button.classList.add('buttonSpace');

            button.addEventListener('click', function(e){
                textInput.value += ' ' + elem.split('.').shift();
            });
            rDiv.appendChild(button);
        });
    }




    //ref:  <circle id="HEAD" class="characterHead" cx="175.1" cy="175.1" r="175.1"/>

</script>