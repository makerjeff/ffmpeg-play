<h3>(video) (post to '/video')</h3>

<!--DEBUG-->
{{#if data}}
    <!-- partials here-->
    {{data}}
{{/if}}

<div class="container">
    <!-- MAIN FORM -->
    <form id="main-form" class="">
        <div class="form-group">
            <label for="input-text">Enter Text </label>
            <input type="text" class="form-control" id="input-text" name="input_data" required autocomplete="off" autofocus maxlength="200">

        </div>

        <button type="submit" alt="Submit" class="btn btn-default pull-right">Make Video</button> <br>
    </form>

    <!-- DEBUG CONTROLS -->
    <div id="debugControlsDiv">
        <!--Word List Button-->
        <button id="wordListButton" class="btn btn-default">Word List</button>
    </div>

    <!--Results Div-->
    <div id="resultDiv"></div>
</div>



<script>
    var pingStart;
    var pingEnd;

    var resultDiv = document.getElementById('resultDiv');
    var form = document.getElementById('main-form');
    var wordListButton = document.getElementById('wordListButton');

    //create loadVideoButton on the fly
    //var loadVideoButton = document.getElementById('loadVideoButton');

    var textInput = document.getElementById('input-text');


    // =========================
    // EVENT LISTENERS =========
    // =========================

    // startup
    window.addEventListener('load', function(e){
        console.log('Ready to make America great again.');

    });


    form.addEventListener('submit', function(e){
        pingStart = Date.now();         //store start time.
        e.preventDefault();

        var grabbedData = document.getElementById('input-text');

        //AJAX call to API
        $.ajax({
            url: '/video',
            type:'POST',
            data:{datum: grabbedData.value},
            success: function(data, textStatus, jqXHR){

                var stringData = JSON.stringify(data);

                pingEnd = Date.now();   //stores return time.
                console.log('data returned from server: ' + stringData);

                // add to results div
                resultDiv.innerHTML = stringData;
                console.log('Pingo-Pongo: ' + (pingEnd - pingStart).toString());

                console.log(data);

                // if video is completed...
                if(data.status == 'complete') {
                    // create load video button, which will be replaced with auto-load in the future.
                    createLoadVideoButton(document.getElementById('debugControlsDiv'), data);
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log('Horrible AJAX error occurred: ' + textStatus);
                resultDiv.innerHTML = 'Horrible error occurred: ' + textStatus;
            }
        });
        grabbedData.value = '';
    });



    //grab word list
    wordListButton.addEventListener('click', function(e){
        resultDiv.innerHTML = '';
        ajaxPath('/words', 'GET');
    });





    // =========================
    // FUNCTION DEFINITIONS ====
    // =========================

    /**
     * Creates a video button, that creates a video element.
     * @param targetDiv Where to append the video element.
     * @param data Data to ingest.
     */
    function createLoadVideoButton(targetDiv, data){

        // create button
        var loadVideoButton = document.createElement('button');
        loadVideoButton.id = 'loadVideoButton';

        var loadVideoButtonText = document.createTextNode('Load Video');
        loadVideoButton.appendChild(loadVideoButtonText);

        loadVideoButton.classList.add('btn');
        loadVideoButton.classList.add('btn-success');

        targetDiv.appendChild(loadVideoButton);


        // add events
        loadVideoButton.addEventListener('click', function(e){

            //TODO: make a function.
            var video = document.createElement('video');
            video.id = 'videoElement';
            video.src = '/videos/' + data.videoUrl;
            video.preload = 'auto';
            //video.autoPlay = true;

            video.setAttribute('autoplay', true);
            //video.setAttribute('muted', true);    //for android mobile
            resultDiv.appendChild(video);
            video.addEventListener('canplaythrough', function(e){
                this.play();
            });

            video.addEventListener('click', function(e){
                if(this.paused) {
                    this.play();
                }
            });

            //remove button
            this.parentNode.removeChild(this);

        });
    }

    /**
     * Custom conditional AJAX method.
     * @param path  Endpoint path.
     * @param method    HTTP method.
     * @returns {*}     Returns a
     */
    function ajaxPath(path, method) {
        var internalPing = Date.now();

        $.ajax({
            url: path,
            type: method,
            success: function(data, status, jqXHR){

                var internalPong = Date.now();
                updateResultDiv(resultDiv, data);
                //console.log(data);
                console.log('PingPong: ' + (internalPong - internalPing).toString());

            },
            error: function(jqXHR, status, error){
                console.log('Horrible AJAX error occurred: ' + status);
                console.log('PingPong: ' + (internalPong - internalPing).toString());
            }
        });
    }

    /**
     * Updates the results div.
     * @param rDiv  result div object.
     * @param data  data to pass in.
     */
    function updateResultDiv(rDiv, data){

        // parse AJAX'd data
        var parsedData = JSON.parse(data);

        // print AJAX'd data to console
        console.log(parsedData);

        // create a button for each of the array
        parsedData.forEach(function(elem, ind, arr){

            var inputWord = elem.split('.').shift();

            var button = document.createElement('button');
            var buttonText = document.createTextNode(inputWord);

            button.appendChild(buttonText);
            button.setAttribute('class','btn btn-success');

            button.classList.add('buttonSpace');

            button.addEventListener('click', function(e){
                textInput.value += ' ' + elem.split('.').shift();
            });

            //li.appendChild(button);
            //ul.appendChild(li);

            rDiv.appendChild(button);

        });

        //rDiv.appendChild(ul);
    }



</script>